class Game extends Phaser.Game{constructor({width:a,height:e,renderer:t,parent:d,state:n,transparent:s,antialias:r,physicsConfig:i}){super(a,e,t,d,n,s,r,i);const _=this.state;_.add("Game_Load",Game_Load),_.add("Main_Scene",Main_Scene),_.add("Game_Start",Game_Start),_.add("Play_Scene",Play_Scene),_.add("Game_End",Game_End)}}window.addEventListener("DOMContentLoaded",()=>{new Game({width:480,height:640}).state.start("Game_Load")},!1);
class IMG extends Phaser.Image{constructor({game:s,x:e,y:t,key:i,frame:a}){super(s,e,t,i,a),this.anchor.setTo(.5,0),this.fixedToCamera=!0,this.visible=!1,this.game.add.existing(this)}}class Txt extends Phaser.Text{constructor({game:s,x:e,y:t,text:i,style:a}){super(s,e,t,i,a),this.anchor.setTo(.5,.5),this.fixedToCamera=!0,this.visible=!1,this.game.add.existing(this)}}
class Loader extends Phaser.Text{constructor({game:t,x:e,y:s,text:o,style:i}){super(t,e,s,o,i),this.anchor.setTo(.5,.5),this.setStyle({fill:"white"}),this.game.add.existing(this),this.loop()}loop(){const t=this.game.load;t.onFileComplete.add((t,e,s,o,i)=>{this.setText("Loading ...   "+t+"% ( "+o+" / "+i+" )")},this),t.onLoadComplete.add(()=>{this.setText("Press enter to start")},this)}}
class Energys extends Phaser.Group{constructor({game:e,parent:s,name:a,addToStage:r,enableBody:t,physicsBodyType:n}){super(e,s,a,r,t,n),this.createMultiple(3,"energy")}}
class Game_End extends Phaser.State{create(){this.game.camera.flash(16777215,5e3),this.video=this.add.video("video");const e=this.video;e.addToWorld(-300,0,0,0,1,1),e.play()}update(){this.video.onComplete.add(()=>{this.state.start("Game_Load")},this)}}
class Game_Load extends Phaser.State{preload(){const e=this.game.load;e.image("main_scene_bg","assets/main_scene/background.png"),e.image("main_scene_title","assets/main_scene/title.png"),e.audio("main_scene_bgm","assets/main_scene/late in autumn.mp3")}create(){const e=this.game,a=e.add;a.image(-260,0,"main_scene_bg"),a.image(116,30,"main_scene_title"),e.bgm=a.audio("main_scene_bgm",.5,!0),this.loop()}loop(){this.game.bgm.play()}update(){this.game.state.start("Main_Scene")}}
class Game_Start extends Phaser.State{preload(){}create(){const t=this.video=this.add.video("game_start_video");t.addToWorld(-260,0,0,0,1,1),t.play(),this.add.image(116,30,"game_start_title"),t.onComplete.add(()=>{this.game.state.start("Play_Scene")},this)}}
class Main_Scene extends Phaser.State{init(){const e=this.game,s=e.add,a=e.load;s.image(-260,0,"main_scene_bg"),s.image(116,30,"main_scene_title"),this.loader=new Loader({game:e,x:e.width/2,y:e.height/8*7,text:"Loading ...   "+a.progress})}preload(){const e=this.game.load;e.video("game_start_video","assets/game_start/game start.mp4"),e.image("game_start_title","assets/game_start/title.png"),e.image("play_scene_background","assets/play_scene/ui/background.png"),e.image("player","assets/play_scene/player/player.png"),e.image("player_bullet_0","assets/play_scene/player/bullet_0.png"),e.image("player_bullet_1","assets/play_scene/player/bullet_1.png"),e.image("player_bullet_2","assets/play_scene/player/bullet_2.png"),e.spritesheet("player_explosion","assets/play_scene/player/explosion.png",128,128),e.image("enemy","assets/play_scene/enemy/enemy.png"),e.image("enemy_bullet_1","assets/play_scene/enemy/bullet.png"),e.image("enemy_explosion","assets/play_scene/enemy/explosion.png"),e.image("boss","assets/play_scene/boss/boss.png"),e.image("boss_bullet_1","assets/play_scene/boss/bullet.png"),e.image("energy","assets/play_scene/buffs/energy.png"),e.audio("play_scene_bgm","assets/play_scene/future gazer.mp3"),e.image("pause_menu","assets/play_scene/pause/board.png"),e.image("pause_select","assets/play_scene/pause/select.png"),e.image("Yomikawa","assets/play_scene/pause/Yomikawa.png"),e.video("video","assets/game_end/game end.mp4")}update(){const e=this.game;e.input.keyboard.justPressed(Phaser.Keyboard.ENTER)&&(e.bgm.stop(),e.state.start("Game_Start"))}}
class Play_Scene extends Phaser.State{create(){const e=this.game,s=e.height,t=e.width,i=this.add,a=this.input.keyboard,h=Phaser.Keyboard;this.physics.startSystem(Phaser.Physics.ARCADE),this.world.setBounds(-40,0,560,s),this.background=new Play_Scene_Background({game:e,key:"play_scene_background"}),this.score=new Score({game:e,x:t/2,y:20}),this.timer=new Timer({game:e}),this.enemys=new Enemys({game:e,enableBody:!0}),this.energys=new Energys({game:e,enableBody:!0}),this.player=new Player({game:e,x:t/2,y:s/8*7,key:"player"}),this.boss=new Boss({game:e,x:t/2,y:s/4,key:"boss"}),this.bgm=i.audio("play_scene_bgm",.5,!0),this.pause_board=new IMG({game:e,x:t/2,y:-20,key:"pause_menu"}),this.pause_contents=[new Txt({game:e,x:t/2,y:170,text:"遊戲說明"}),new Txt({game:e,x:t/2,y:245,text:"重新開始"}),new Txt({game:e,x:t/2,y:320,text:"回主畫面"})],this.pause_select=new IMG({game:e,x:t/2,y:130,key:"pause_select"}),this.pause_yomikawa=new IMG({game:e,x:90,y:70,key:"Yomikawa"}),this.pause_helps=[new Txt({game:e,x:t/2,y:170,text:"移動：方向鍵"}),new Txt({game:e,x:t/2,y:245,text:"攻擊：Ｚ"}),new Txt({game:e,x:t/2,y:320,text:"大絕：// todo"})],this.UP=a.addKey(h.UP),this.DOWN=a.addKey(h.DOWN),this.SPACE=a.addKey(h.SPACEBAR),this.ENTER=a.addKey(h.ENTER),this.loop()}loop(){this.camera.follow(this.player,Phaser.Camera.FOLLOW_LOCKON,.1,.1),this.bgm.play()}update(){const e=this.game,s=this.timer,t=this.player,i=this.enemys,a=this.boss,h=this.energys;if(this.background.renew(s),this.score.renew(i,a),t.check(),t.move(),t.shoot(),t.hurt(i,a),t.die(),t.buff(h),i.check(s),i.move(t),i.shoot(t),i.hurt(t),i.die(h),a.check(s),a.move(t),a.shoot(t),a.hurt(t),a.die(this.bgm),this.SPACE.justDown){this.pause_board.visible=!0;for(let e=0;e<3;e++)this.pause_contents[e].visible=!0;this.pause_select.visible=!0,this.pause_yomikawa.visible=!0,e.paused=!e.paused}}pauseUpdate(){const e=this.game,s=(e.input.keyboard,Phaser.Keyboard,this.pause_select),t=this.pause_contents,i=this.pause_helps;if(this.UP.justDown?130===s.y?s.y=280:s.y-=75:this.DOWN.justDown&&(280===s.y?s.y=130:s.y+=75),this.ENTER.justDown)for(let e=0;e<3;e++)t[e].visible=!t[e].visible,i[e].visible=!i[e].visible;if(this.SPACE.justDown){this.pause_board.visible=!1;for(let e=0;e<3;e++)t[e].visible=!1,i[e].visible=!1;this.pause_select.visible=!1,this.pause_yomikawa.visible=!1,e.paused=!e.paused}}}
class Boss extends Phaser.Sprite{constructor({game:t,x:s,y:e,key:i,frame:a}){super(t,s,e,i,a);const h=this.game;h.physics.arcade.enable(this),this.checkWorldBounds=!0,this.anchor.setTo(.5,.5),this.exists=!1,this.weapon=new Boss_Weapon_1({game:h,parent:this}),this.game.add.existing(this),this.loop()}loop(){const t=this.game,s=t.rnd;t.time.events.loop(2e3,()=>{this.exists&&t.add.tween(this).to({x:s.integerInRange(0,t.width),y:s.integerInRange(0,t.height/4)},1750,Phaser.Easing.Quartic.InOut,!0)},this)}check(t){30===t.counter&&this.reset(this.x,this.y,100)}move(t){this.exists&&(this.rotation=this.game.physics.arcade.angleBetween(this,t))}shoot(t){if(this.exists){const s=this.game.time.now,e=this.weapon;if(e.mark<s){for(let s=-1;s<=1;s++)e.fireAtXY(t.x+100*s,t.y+100*s);e.mark=s+e.delay}}}hurt(t){this.exists&&this.game.physics.arcade.overlap(this,t.weapon.bullets,(t,s)=>{s.kill(),t.damage(1)})}die(t){this.health||(t.stop(),this.game.state.start("Game_End"))}}
class Boss_Weapon_1 extends Phaser.Weapon{constructor({game:e,parent:t}){super(e,t),this.multiFire=!0,this.bulletSpeed=100,this.bulletKillType=Phaser.Weapon.KILL_WORLD_BOUNDS,this.trackSprite(this.parent,120,0,!0),this.createBullets(100,"boss_bullet_1",1),this.mark=0,this.delay=1e3}}
class Enemys extends Phaser.Group{constructor({game:e,parent:t,name:s,addToStage:i,enableBody:o,physicsBodyType:n}){super(e,t,s,i,o,n);const a=this.game;this.createMultiple(3,"enemy"),this.setAll("anchor.x",.5),this.setAll("anchor.y",.5),this.setAll("checkWorldBounds",!0),this.setAll("outOfBoundsKill",!0),this.weapon=new Enemy_Weapon_1({game:a}),this.forEach(e=>{e.explosion=new Enemys_Explosion_1({game:a,x:0,y:0})},this),this.loop()}loop(){const e=this.game;e.time.events.loop(1e3,()=>{this.forEachExists(t=>{e.add.tween(t).to({x:e.rnd.integerInRange(0,480)},1750,Phaser.Easing.Quadratic.InOut,!0)},this)},this)}check(e){if(e.counter<30){const e=this.getFirstExists(!1),t=this.game.rnd;e&&(e.reset(t.integerInRange(0,480),0,3),e.body.velocity.y=t.integerInRange(100,200))}}move(e){this.forEachExists(t=>{t.rotation=this.game.physics.arcade.angleBetween(t,e)},this)}shoot(e){const t=this.getRandomExists(0,2),s=this.weapon;t&&(s.trackSprite(t,0,0,!1),s.fireAtSprite(e))}hurt(e,t){this.forEachExists(t=>{this.game.physics.arcade.overlap(t,e.weapon.bullets,(e,t)=>{t.kill(),e.damage(1)})},this)}die(e){const t=e.getFirstExists(!1);this.forEach(e=>{if(!e.health){const s=e.x,i=e.y;i>50&&t&&t.reset(s,i),e.explosion.x=s,e.explosion.y=i,e.explosion.start(!0,2e3,null,50)}},this)}}
class Enemys_Explosion_1 extends Phaser.Particles.Arcade.Emitter{constructor({game:e,x:s,y:t,maxParticles:a}){super(e,s,t,a),this.makeParticles("enemy_explosion"),this.gravity=500}}
class Enemy_Weapon_1 extends Phaser.Weapon{constructor({game:e,parent:t}){super(e,t),this.bulletSpeed=300,this.bulletKillType=Phaser.Weapon.KILL_WORLD_BOUNDS,this.fireRate=700,this.createBullets(5,"enemy_bullet_1",1)}}
class Player_Explosion_1 extends Phaser.Group{constructor({game:e,parent:s,name:a,addToStage:o,enableBody:t,physicsBodyType:l}){super(e,s,a,o,t,l),this.createMultiple(5,"player_explosion"),this.setAll("anchor.x",.5),this.setAll("anchor.y",.5),this.forEach(e=>{e.animations.add("player_explosion")},this)}}
class Player extends Phaser.Sprite{constructor({game:e,x:s,y:i,key:t,frame:a}){super(e,s,i,t,a);const h=this.game;h.physics.arcade.enable(this),h.add.existing(this),this.speed=300,this.body.collideWorldBounds=!0,this.health=5,this.anchor.setTo(.5,.5),this.level=0,this.power=0,this.weapons=[new Player_Weapon_0({game:e,parent:this}),new Player_Weapon_1({game:e,parent:this}),new Player_Weapon_2({game:e,parent:this})],this.explosions=new Player_Explosion_1({game:h,enableBody:!0})}check(){this.weapon=this.weapons[this.level]}move(){const e=this.game.input.keyboard,s=Phaser.Keyboard,i=this.speed,t=this.body.velocity;e.isDown(s.LEFT)?t.x=-1*i:e.isDown(s.RIGHT)?t.x=i:t.x=0,e.isDown(s.UP)?t.y=-1*i:e.isDown(s.DOWN)?t.y=i:t.y=0}shoot(){const e=this.game,s=e.input.keyboard,i=Phaser.Keyboard;if(s.isDown(i.Z)){const s=this.weapon;if(2===this.level){const i=e.time.now;if(s.mark<i){for(let e=-1;e<=1;e++)s.fireAtXY(this.x+e,this.y-2);s.mark=i+s.delay}}else s.fire()}}hurt(e,s){this.game.physics.arcade.overlap(this,e.weapon.bullets,(e,s)=>{e.damage(1),s.kill()},null,this),this.game.physics.arcade.overlap(this,s.weapon.bullets,(e,s)=>{e.damage(1),s.kill()},null,this)}die(){if(!this.alive){const e=this.explosions.getFirstExists(!1);e.reset(this.x,this.y),e.play("player_explosion",60,!1,!0),this.power=0,this.level=0,this.reset(215,518,5),this.game.camera.shake(.05,200,!0,Phaser.Camera.SHAKE_HORIZONTAL)}}buff(e){this.game.physics.arcade.overlap(this,e,(e,s)=>{s.kill(),this.power<9&&this.power++,this.level<2&&(3!==this.power&&6!==this.power||this.level++)},null,this)}}
class Player_Weapon_0 extends Phaser.Weapon{constructor({game:e,parent:t}){super(e,t),this.bulletSpeed=300,this.bulletKillType=Phaser.Weapon.KILL_WORLD_BOUNDS,this.fireRate=200,this.trackSprite(this.parent,0,0,!1),this.createBullets(10,"player_bullet_0",1)}}class Player_Weapon_1 extends Phaser.Weapon{constructor({game:e,parent:t}){super(e,t),this.bulletSpeed=600,this.bulletKillType=Phaser.Weapon.KILL_WORLD_BOUNDS,this.bulletAngleVariance=30,this.fireRate=150,this.trackSprite(this.parent,0,0,!1),this.createBullets(10,"player_bullet_1",1)}}class Player_Weapon_2 extends Phaser.Weapon{constructor({game:e,parent:t}){super(e,t),this.bulletSpeed=900,this.bulletKillType=Phaser.Weapon.KILL_WORLD_BOUNDS,this.multiFire=!0,this.trackSprite(this.parent,0,0,!1),this.createBullets(30,"player_bullet_2",1),this.mark=0,this.delay=150}}
class Play_Scene_Background extends Phaser.TileSprite{constructor({game:t,x:e,y:i,width:s,height:h,key:n,frame:a}){super(t,e,i,s,h,n,a);const r=this.game,c=r.height;this.x=-260,this.y=-1*c,this.width=1087,this.height=2*c,r.add.existing(this)}renew(t){const e=this.tilePosition;e.y+=t>20?4:t>10?3:2}}
class Score extends Phaser.Text{constructor({game:t,x:e,y:s,text:i,style:h}){super(t,e,s,i,h),this.anchor.setTo(.5,0),this.fixedToCamera=!0,this.setStyle({fill:"white",font:"18px Arial"}),this.setText("score: 0"),this.point=0,this.game.add.existing(this)}renew(t,e){const s=t.getFirst("health",0);s&&(this.point++,this.setText("score: "+this.point),s.health=3),e.health||(this.point+=5,this.setText("score: "+this.point),this.health=10)}}
class Timer extends Phaser.Time{constructor({game:t}){super(t),this.counter=0,this.content=new Txt({game:this.game,x:50,y:30,text:"time: 0",style:{font:"18px Arial",fill:"#ffffff"}}),this.content.visible=!0,this.loop()}loop(){this.game.time.events.loop(Phaser.Timer.SECOND,this.count,this)}count(){const t=++this.counter;this.content.setText("time: "+t)}}